# 使用 OpenJDK 11 作为基础镜像
FROM adoptopenjdk/openjdk11:alpine

# 设置工作目录
WORKDIR /app

# 安装编译器和其他开发工具
RUN apk add --no-cache openjdk11-jdk

# 下载和解压 Tomcat
RUN wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.0.M1/bin/apache-tomcat-9.0.0.M1.tar.gz && \
    tar -zxvf apache-tomcat-9.0.0.M1.tar.gz && \
    rm apache-tomcat-9.0.0.M1.tar.gz && \
    mv apache-tomcat-9.0.0.M1 tomcat

# 暴露 Tomcat 端口
EXPOSE 8080

# 启动 Tomcat
CMD ["/app/tomcat/bin/catalina.sh", "run"]


#构建流程
#docker build -t <镜像名称> .
#docker run -d -p 8080:8080 -v /path/to/local/index.html:/app/tomcat/webapps/ROOT/index.html -v /path/to/local/SquareServlet.class:/app/tomcat/webapps/ROOT/WEB-INF/classes/SquareServlet.class your-tomcat-image
#Example:docker run -d -p 8080:8080 -v D:/Javaweb/Pro1/jsp_files:/app/tomcat/webapps/ROOT/ -v D:/Javaweb/Pro1/servlet:/app/tomcat/webapps/ROOT/WEB-INF/classes/ java

# 编译 Java 文件
#  RUN javac -cp /app/tomcat/lib/servlet-api.jar:/app/tomcat/webapps/ROOT/WEB-INF/classes /app/tomcat/webapps/ROOT/WEB-INF/classes/*.java

#访问地址
#http://localhost:8080/此后填写jsp_files下的jsp文件名
